<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Student Management System</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
</head>
<style>
    body {
        background-color: #eef2f7;
        font-family: 'Arial', sans-serif;
    }

    /* Navigation Bar */
    .navbar {
        background-color: #343a40;
        color: #ffffff;
    }
    .navbar-brand {
        color: #ffffff;
        font-weight: bold;
    }
    .navbar .fa-bell,
    .navbar .fa-cog {
        color: #ffffff;
        margin-left: 20px;
        cursor: pointer;
    }

    /* Page Header */
    h1 {
        color: #333333;
        font-weight: 600;
    }

    /* Table Styling */
    .table {
        background-color: #ffffff;
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }
    .table th {
        background-color: #495057;
        color: #ffffff;
    }
    .table td {
        text-align: center;
    }

    /* Buttons */
    .btn-primary {
        background-color: #007bff;
        border: none;
    }
    .btn-warning {
        color: #fff;
        background-color: #ffc107;
        border: none;
    }
    .btn-danger {
        background-color: #dc3545;
        border: none;
    }

    /* Modal Content */
    .modal-content {
        border-radius: 10px;
    }

    /* Footer */
    footer {
        text-align: center;
        padding: 20px;
        background-color: #343a40;
        color: #ffffff;
        margin-top: 20px;
    }
</style>
<body>
    <!-- Navigation Bar -->
    <nav class="navbar navbar-expand-lg navbar-dark">
        <div class="container-fluid">
            <a class="navbar-brand" href="#">Student Management</a>
            <div class="d-flex align-items-center">
                <i class="fas fa-bell"></i>
                <i class="fas fa-cog"></i>
            </div>
        </div>
    </nav>

    <div class="container mt-5">
        <!-- <h1 class="text-center">Student Management System</h1> -->

        <!-- Button to Add a New Student -->
        <div class="text-center my-3">
            <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addStudentModal">
                <i class="fas fa-user-plus"></i> Add New Student
            </button>
        </div>

        <!-- Table to Display Students -->
        <table class="table table-bordered table-striped">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Name</th>
                    <th>Age</th>
                    <th>Email</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                <% students.forEach((student) => { %>
                    <tr>
                        <td><%= student.id %></td>
                        <td><%= student.name %></td>
                        <td><%= student.age %></td>
                        <td><%= student.email %></td>
                        <td>
                            <button class="btn btn-warning btn-sm" data-bs-toggle="modal" data-bs-target="#updateStudentModal<%= student.id %>">
                                <i class="fas fa-edit"></i> Update
                            </button>
                            <form action="/students/delete/<%= student.id %>" method="POST" style="display:inline;">
                                <!-- Delete Button (Updated) -->
                                  <button type="button" class="btn btn-danger btn-sm" onclick="confirmDelete(<%= student.id %>)">
                                      <i class="fas fa-trash-alt"></i> Delete
                                  </button>

                            </form>
                        </td>
                    </tr>

                    <!-- Update Student Modal -->
                    <div class="modal fade" id="updateStudentModal<%= student.id %>" tabindex="-1" aria-labelledby="updateStudentModalLabel" aria-hidden="true">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title">Update Student</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>
                                <div class="modal-body">
                                    <form id="updateForm<%= student.id %>" onsubmit="handleUpdateStudent(event, <%= student.id %>)">
                                        <div class="mb-3">
                                            <label for="name" class="form-label">Name</label>
                                            <input type="text" class="form-control" name="name" value="<%= student.name %>" required>
                                        </div>
                                        <div class="mb-3">
                                            <label for="age" class="form-label">Age</label>
                                            <input type="number" class="form-control" name="age" value="<%= student.age %>" required>
                                        </div>
                                        <div class="mb-3">
                                            <label for="email" class="form-label">Email</label>
                                            <input type="email" class="form-control" name="email" value="<%= student.email %>" required>
                                        </div>
                                        <button type="submit" class="btn btn-warning">Update</button>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                <% }) %>
            </tbody>
        </table>

        <!-- Add Student Modal -->
        <div class="modal fade" id="addStudentModal" tabindex="-1" aria-labelledby="addStudentModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Add New Student</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <form action="/create" method="POST">
                            <div class="mb-3">
                                <label for="name" class="form-label">Name</label>
                                <input type="text" class="form-control" name="name" required>
                            </div>
                            <div class="mb-3">
                                <label for="age" class="form-label">Age</label>
                                <input type="number" class="form-control" name="age" required>
                            </div>
                            <div class="mb-3">
                                <label for="email" class="form-label">Email</label>
                                <input type="email" class="form-control" name="email" required>
                            </div>
                            <button type="submit" class="btn btn-success">Add Student</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>



    <!-- Bootstrap JS and Font Awesome -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/js/all.min.js"></script>
    <!-- SweetAlert2 Integration -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    // Function to handle student creation
    async function handleCreateStudent(event) {
        event.preventDefault();
        const form = event.target;
        const formData = new FormData(form);
        const data = Object.fromEntries(formData.entries());

        try {
            const response = await fetch('/create', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(data)
            });

            const result = await response.json();
            if (result.status === 'success') {
                Swal.fire('Success', result.message, 'success').then(() => {
                    window.location.reload();
                });
            } else {
                Swal.fire('Error', result.message, 'error');
            }
        } catch (error) {
            Swal.fire('Error', 'An error occurred while creating the student.', 'error');
        }
    }

    // Function to confirm student deletion
    async function confirmDelete(id) {
        const result = await Swal.fire({
            title: 'Are you sure?',
            text: "This action cannot be undone!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            confirmButtonText: 'Yes, delete it!'
        });

        if (result.isConfirmed) {
            try {
                const response = await fetch(`/students/delete/${id}`, {
                    method: 'POST'
                });

                const result = await response.json();
                if (result.status === 'success') {
                    Swal.fire('Deleted!', result.message, 'success').then(() => {
                        window.location.reload();
                    });
                } else {
                    Swal.fire('Error', result.message, 'error');
                }
            } catch (error) {
                Swal.fire('Error', 'An error occurred while deleting the student.', 'error');
            }
        }
    }

    // Attach the create student handler to the form
    const createStudentForm = document.querySelector('form[action="/create"]');
    if (createStudentForm) {
        createStudentForm.addEventListener('submit', handleCreateStudent);
    }

    async function handleUpdateStudent(event, id) {
        event.preventDefault();
        const form = event.target;
        const formData = new FormData(form);
        const data = Object.fromEntries(formData.entries());

        try {
            const response = await fetch(`/students/update/${id}`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(data)
            });

            const result = await response.json();
            if (result.status === 'success') {
                Swal.fire('Success', result.message, 'success').then(() => {
                    window.location.reload();
                });
            } else {
                Swal.fire('Error', result.message, 'error');
            }
        } catch (error) {
            Swal.fire('Error', 'An error occurred while updating the student.', 'error');
        }
    }
</script>

</body>
</html>
